{"version":3,"sources":["components/header.js","components/layout.js","components/feed-layout.js","components/categorized-layout.js","App.js","serviceWorker.js","index.js"],"names":["Header","siteTitle","small","className","href","defaultProps","Layout","children","style","borderTopStyle","borderTopWidth","marginTop","minHeight","paddingTop","Date","getFullYear","CategorizedLayout","data","sortCategories","feedName","week","d","UTC","getMonth","getDate","setUTCDate","getUTCDate","getUTCDay","yearStart","getUTCFullYear","weekNo","Math","ceil","getWeekNumber","colors","Map","sortedTags","slice","forEach","category","set","categoryTags","item","index","categoryAssignments","values","map","assignment","assignedNews","length","key","id","get","minWeightPercentage","totalCategoryWeight","minWeight","newsItem","guid","sizeCategory","categoryWeight","displayCategory","weightCategory","title","contentSnippet","undefined","enclosure","src","url","App","useState","Items","setData","useEffect","a","fetch","then","response","json","fetchNews","categories","assigned","value","sortedCategoryTags","Array","from","keys","sort","b","itemsSortedByWeight","perc","String","charAt","console","log","categoryAssignment","weight","demand","min","includes","localeCompare","push","max","categoryValuesSorted","filter","pers","getTopCategories","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c544b1d0.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle, small}) => (\n\n  <>\n    <header>\n\n        {!small && (\n          <span className=\"site-title\">\n            <h1><a href=\"/news\">Uutiset .</a></h1>\n\n          <div className=\"site-description\">Uutisia, hitaammin</div>\n        </span>\n        )}\n        {small && (\n          <span className=\"site-title-small\">\n            <h1>Uutiset .</h1>\n        </span>\n        )}    \n\n  </header>\n</>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, small }) => {\n\n  return (\n    <>\n      <Header siteTitle=\"Uutiset\" small={small}/>\n      <div className = \"page-container\">\n        <main>{children}</main>\n        <footer style={{\n          borderTopStyle: `solid`,\n          borderTopWidth: `1px`,\n          marginTop: '1.5rem',\n          minHeight: `100%`,\n          paddingTop: `1.5rem`\n        }}>\n          Â© {new Date().getFullYear()} Tiimi \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport BorderedTitle from './bordered-title'\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\n/* For a given date, get the ISO week number\n *\n * Based on information at:\n *\n *    http://www.merlyn.demon.co.uk/weekcalc.htm#WNR\n *\n * Algorithm is to find nearest thursday, it's year\n * is the year of the week number. Then get weeks\n * between that date and the first day of that year.\n *\n * Note that dates in one year can be weeks of previous\n * or next year, overlap is up to 3 days.\n *\n * e.g. 2014/12/29 is Monday in week  1 of 2015\n *      2012/1/1   is Sunday in week 52 of 2011\n */\nfunction getWeekNumber(d) {\n    // Copy date so don't modify original\n    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n    // Set to nearest Thursday: current date + 4 - current day number\n    // Make Sunday's day number 7\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay()||7));\n    // Get first day of year\n    var yearStart = new Date(Date.UTC(d.getUTCFullYear(),0,1));\n    // Calculate full weeks to nearest Thursday\n    var weekNo = Math.ceil(( ( (d - yearStart) / 86400000) + 1)/7);\n    // Return array of year and week number\n    return [d.getUTCFullYear(), weekNo];\n  }\n  \n  function getTopCategories(data, feedName, weekNumber) {\n  \n    let categories = new Map();\n  \n    data.Items.forEach( item => {\n        console.log(item);\n\n        if (item.item.data.feedName.localeCompare(feedName) === 0 && \n           item.item.data.weekNumber[1] === weekNumber[1]) {\n            /** \n             * Looks like the first category is the \"real one\". \n             */\n            item.item.data.categories.forEach(category => {\n                if (categories.get(category) === undefined) {\n                    categories.set(category, 1);\n                } else {\n                    categories.set(category, categories.get(category) + 1);\n                }    \n            })\n        }\n  \n      /*item.item.data.categories.forEach(category => {\n        if (categories.get(category) === undefined) {\n          categories.set(category, 1);\n          console.log(\"Setting  \" + category + \" to 1\");\n        } else {\n          categories.set(category, categories.get(category) + 1);\n          console.log(\"Setting  \" + category + \" to \" + categories.get(category));\n        }\n      })*/\n  \n    });\n  \n  \n    categories.forEach( (key, value, map) => {\n      console.log(key + \" \" + value);\n    });\n  \n    let categoryTags = Array.from(categories.keys());\n    console.log(\"First hit: \" + categoryTags[0]);\n  \n    let sortedCategoryTags = categoryTags.sort(( a, b) => {\n      return categories.get(b) - categories.get(a);\n    });\n  \n    console.log(\"Top hit: \" + sortedCategoryTags[0] + \" \" + categories.get(sortedCategoryTags[0]));\n  \n    return {\"categories\": categories, \"sortedTags\": sortedCategoryTags}\n  }\n\nconst FeedLayout = ({ data, feedName }) => {\n  \n    const sortCategories = getTopCategories(data, feedName, getWeekNumber(new Date()));\n    const usedArticles = [];\n\n    const colors = new Map();\n  \n    var counter = 0;\n    sortCategories.sortedTags.slice(4).forEach( category => {\n      colors.set(category, \"#355C7D\");\n    })\n  \n    colors.set(sortCategories.sortedTags[0], \"#F8B195\");\n    colors.set(sortCategories.sortedTags[1], \"#F67280\");\n    colors.set(sortCategories.sortedTags[2], \"#C06C84\");\n    colors.set(sortCategories.sortedTags[3], \"#6C5B7B\");\n    colors.set(sortCategories.sortedTags[4], \"#355C7D\");\n  \n    const categoryTags = new Map();\n    sortCategories.sortedTags.forEach( (item, index) => {\n      categoryTags.set(item, \"category-\" + index);\n    })\n  \n    // style = {{backgroundColor: colors.get(category)}\n  \n    return (\n      <div>\n        <BorderedTitle title= { \"Viikko \" + getWeekNumber(new Date())[1] + \" \" + feedName}/>\n        <div className=\"weekSummary\">\n          \n        {sortCategories.sortedTags.map(category => {\n  \n          return (\n              <div key={feedName + \"category#\" + category}><a href={\"#\" + feedName + category}>{category}</a></div>\n          )\n          })}\n  \n        </div>\n  \n        <div className=\"articlesByCategories\">\n      \n          {sortCategories.sortedTags.map(category => {\n  \n            return (\n            <div key={\"categorynews#\" + category} className={\"categoryNews \" + categoryTags.get(category)}>\n              <div className={\"categoryHeading \" + categoryTags.get(category)} >\n                <a id={feedName + category} className=\" categoryTag\"><h1 className=\"categoryHeadingTitle\">{category}</h1></a>\n                <div />\n              </div>\n              <div className=\"categoryNewsArticles\"> \n                {data.Items.map(newsItem => {\n                    return ( (newsItem.item.data !== undefined) && \n                        (newsItem.item.data.weekNumber[1] === getWeekNumber(new Date())[1]) && \n                        (newsItem.item.data.categories.includes(category)) &&\n                        (newsItem.item.data.feedName.localeCompare(feedName) === 0) &&\n                        (!usedArticles.includes(newsItem.guid))\n                        ) ? \n                        \n                    <article key={newsItem.guid}>\n                        {usedArticles.push(newsItem.guid)}\n                        {console.log(\"Adding + \" + newsItem.item.data.categories[0])}\n                        <div className=\"articleInfo\">\n                        <div className=\"source\">Yle</div>\n                        </div>\n                        <a href={newsItem.item.data.link}><h1>{newsItem.item.data.title}</h1></a>\n                        <p className=\"articleSummary\">{newsItem.item.data.contentSnippet}</p>\n                        {newsItem.item.data.enclosure !== undefined && (\n                        <div className=\"articleCoverContainer\">\n                            <img className=\"articleCover\" src={newsItem.item.data.enclosure.url}></img>\n                        </div>\n                        )}\n                    </article>\n                    : \n                    null\n                    })}\n                 </div>\n              </div>\n            )\n          })}\n  \n        </div>\n      </div>\n    );\n}\n\nexport default FeedLayout;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport BorderedTitle from './bordered-title'\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\n/* For a given date, get the ISO week number\n *\n * Based on information at:\n *\n *    http://www.merlyn.demon.co.uk/weekcalc.htm#WNR\n *\n * Algorithm is to find nearest thursday, it's year\n * is the year of the week number. Then get weeks\n * between that date and the first day of that year.\n *\n * Note that dates in one year can be weeks of previous\n * or next year, overlap is up to 3 days.\n *\n * e.g. 2014/12/29 is Monday in week  1 of 2015\n *      2012/1/1   is Sunday in week 52 of 2011\n */\nfunction getWeekNumber(d) {\n    // Copy date so don't modify original\n    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n    // Set to nearest Thursday: current date + 4 - current day number\n    // Make Sunday's day number 7\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay()||7));\n    // Get first day of year\n    var yearStart = new Date(Date.UTC(d.getUTCFullYear(),0,1));\n    // Calculate full weeks to nearest Thursday\n    var weekNo = Math.ceil(( ( (d - yearStart) / 86400000) + 1)/7);\n    // Return array of year and week number\n    return [d.getUTCFullYear(), weekNo];\n  }\n  \n  function getTopCategories(data, feedName, weekNumber) {\n  \n    let categories = new Map();\n  \n    data.Items.forEach( item => {\n        console.log(item);\n\n        if (item.item.data.feedName.localeCompare(feedName) === 0 && \n           item.item.data.weekNumber[1] === weekNumber[1]) {\n            /** \n             * Looks like the first category is the \"real one\". \n             */\n            item.item.data.categories.forEach(category => {\n                if (categories.get(category) === undefined) {\n                    categories.set(category, 1);\n                } else {\n                    categories.set(category, categories.get(category) + 1);\n                }    \n            })\n        }\n  \n      /*item.item.data.categories.forEach(category => {\n        if (categories.get(category) === undefined) {\n          categories.set(category, 1);\n          console.log(\"Setting  \" + category + \" to 1\");\n        } else {\n          categories.set(category, categories.get(category) + 1);\n          console.log(\"Setting  \" + category + \" to \" + categories.get(category));\n        }\n      })*/\n  \n    });\n  \n  \n    categories.forEach( (key, value, map) => {\n      console.log(key + \" \" + value);\n    });\n  \n    let categoryTags = Array.from(categories.keys());\n    console.log(\"First hit: \" + categoryTags[0]);\n  \n    let sortedCategoryTags = categoryTags.sort(( a, b) => {\n      return categories.get(b) - categories.get(a);\n    });\n  \n    console.log(\"Top hit: \" + sortedCategoryTags[0] + \" \" + categories.get(sortedCategoryTags[0]));\n  \n    return {\"categories\": categories, \"sortedTags\": sortedCategoryTags}\n  }\n\nconst CategorizedLayout = ({ data, feedName }) => {\n  \n    const sortCategories = data; // getTopCategories(data, feedName, getWeekNumber(new Date()));\n    const usedArticles = [];\n    const week = getWeekNumber(new Date());\n    const colors = new Map();\n  \n    var counter = 0;\n    sortCategories.sortedTags.slice(4).forEach( category => {\n      colors.set(category, \"#355C7D\");\n    })\n  \n    colors.set(sortCategories.sortedTags[0], \"#F8B195\");\n    colors.set(sortCategories.sortedTags[1], \"#F67280\");\n    colors.set(sortCategories.sortedTags[2], \"#C06C84\");\n    colors.set(sortCategories.sortedTags[3], \"#6C5B7B\");\n    colors.set(sortCategories.sortedTags[4], \"#355C7D\");\n  \n    const categoryTags = new Map();\n    sortCategories.sortedTags.forEach( (item, index) => {\n      categoryTags.set(item, \"category-\" + index);\n    })\n  \n    // style = {{backgroundColor: colors.get(category)}\n  \n    return (\n      <div className=\"categoriesContainer\">\n        <div className=\"categoriesHeader\">\n        <div className=\"weekSummaryHeading\"><h1>{\"Viikko \" + week[1] + \", \" + week[0]}</h1></div>\n        <div className=\"weekSummary\">\n          {[...data.categoryAssignments.values()].map(assignment => {\n              return (assignment.assignedNews.length > 0 ? (\n                <span key={\"taglink\" + assignment.category}><a href={\"#category\" + assignment.category}>{assignment.category}</a></span>\n              ) : null)    \n          })}\n          </div>\n        </div>\n  \n          {[...data.categoryAssignments.values()].map(assignment => {\n  \n            return (\n              assignment.assignedNews.length > 0 && (\n              <div key={\"category\" + assignment.category} id={\"category\" + assignment.category} className={\"categoryContainer \" + categoryTags.get(assignment.category) + \" categorySize-\" + assignment.assignedNews.length + \" \" + assignment.minWeightPercentage} >\n                <h1 className=\"categoryTitle\">{assignment.category}</h1>\n              <div>{assignment.totalCategoryWeight + \" \" + assignment.minWeight}</div>\n              <div>{assignment.minWeightPercentage}</div>\n                <div className={\"categoryNews\" + \" categoryNewsSize-\" + assignment.assignedNews.length}>\n                  {assignment.assignedNews.map( newsItem => {\n                    return (\n                      <article key={\"newsItem\" + newsItem.guid} className={\"newsItem newsItem-\" + newsItem.item.sizeCategory + \" \" + newsItem.item.categoryWeight}>\n                        <div className=\"articleInfo\">\n                          <div className=\"source\">{newsItem.item.data.feedName}</div>\n                          <div className=\"displayCategory\">{\"#\"+ newsItem.item.displayCategory}</div>\n\n                          <div>{\"Weight: \" + newsItem.item.categoryWeight + \" Category: \" + newsItem.item.weightCategory}</div>\n                        </div>\n                        <h1><a href={newsItem.guid}>{newsItem.item.data.title}</a></h1>\n                        <p>{newsItem.item.data.contentSnippet}</p>\n                        {newsItem.item.data.enclosure !== undefined && (\n                          <div className=\"articleCoverContainer\">\n                              <img className=\"articleCover\" src={newsItem.item.data.enclosure.url}></img>\n                          </div>)}\n                      </article> \n                    )\n                  })}\n                </div>\n              </div>\n              ))\n          })}\n  \n      </div>\n    );\n}\n\nexport default CategorizedLayout;\n\n/*\n\n <div key={\"categorynews#\" + assignment.category} className={\"categoryNews \" + categoryTags.get(assignment.category)}>\n              <div className={\"categoryHeading \" + categoryTags.get(assignment.category)} >\n                <a name={feedName + assignment.category} className=\" categoryTag\"><h1 className=\"categoryHeadingTitle\">{assignment.category}</h1></a>\n                <div />\n              </div>\n              <div className=\"categoryNewsArticles\"> \n                {assignment.assignedNes.map(newsItem => {\n                    return ( (newsItem.item.data !== undefined) && \n                        (newsItem.item.data.weekNumber[1] === getWeekNumber(new Date())[1]) && \n                        (newsItem.item.data.categories.includes(assignment.category)) &&\n                        (newsItem.item.data.feedName.localeCompare(feedName) === 0) &&\n                        (!usedArticles.includes(newsItem.guid))\n                        ) ? \n                        \n                    <article key={newsItem.guid}>\n                        {usedArticles.push(newsItem.guid)}\n                        {console.log(\"Adding + \" + newsItem.item.data.categories[0])}\n                        <div className=\"articleInfo\">\n                        <div className=\"source\">Yle</div>\n                        </div>\n                        <a href={newsItem.item.data.link}><h1>{newsItem.item.data.title}</h1></a>\n                        <p className=\"articleSummary\">{newsItem.item.data.contentSnippet}</p>\n                        {newsItem.item.data.enclosure !== undefined && (\n                        <div className=\"articleCoverContainer\">\n                            <img className=\"articleCover\" src={newsItem.item.data.enclosure.url}></img>\n                        </div>\n                        )}\n                    </article>\n                    : \n                    null\n                    })}\n                 </div>\n              </div>\n\n*/","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Layout from './components/layout'\nimport BorderedTitle from './components/bordered-title'\nimport FeedLayout from './components/feed-layout'\nimport CategorizedLayout from './components/categorized-layout';\n\n/* For a given date, get the ISO week number\n *\n * Based on information at:\n *\n *    http://www.merlyn.demon.co.uk/weekcalc.htm#WNR\n *\n * Algorithm is to find nearest thursday, it's year\n * is the year of the week number. Then get weeks\n * between that date and the first day of that year.\n *\n * Note that dates in one year can be weeks of previous\n * or next year, overlap is up to 3 days.\n *\n * e.g. 2014/12/29 is Monday in week  1 of 2015\n *      2012/1/1   is Sunday in week 52 of 2011\n */\nfunction getWeekNumber(d) {\n  // Copy date so don't modify original\n  d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n  // Set to nearest Thursday: current date + 4 - current day number\n  // Make Sunday's day number 7\n  d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay()||7));\n  // Get first day of year\n  var yearStart = new Date(Date.UTC(d.getUTCFullYear(),0,1));\n  // Calculate full weeks to nearest Thursday\n  var weekNo = Math.ceil(( ( (d - yearStart) / 86400000) + 1)/7);\n  // Return array of year and week number\n  return [d.getUTCFullYear(), weekNo];\n}\n\nfunction getTopCategories(data) {\n\n  let categories = new Map();\n  let categoryAssignments = new Map();\n\n  data.Items.forEach( item => {\n    item.item.data.assigned = false;\n    /** \n     * Looks like the first category is the \"real one\". \n     */\n    item.item.data.categories.forEach( category => {\n      if (categories.get(category) === undefined) {\n        categories.set(category, 1);\n        //console.log(\"Setting  \" + category + \" to 1\");\n      } else {\n        categories.set(category, categories.get(category) + 1);\n        //console.log(\"Setting  \" + category + \" to \" + categories.get(category));\n      }\n    });\n    /*item.item.data.categories.forEach(category => {\n      if (categories.get(category) === undefined) {\n        categories.set(category, 1);\n        console.log(\"Setting  \" + category + \" to 1\");\n      } else {\n        categories.set(category, categories.get(category) + 1);\n        console.log(\"Setting  \" + category + \" to \" + categories.get(category));\n      }\n    })*/\n\n  });\n\n  categories.forEach( (key, value, map) => {\n    //console.log(key + \" \" + value);\n  });\n\n  let categoryTags = Array.from(categories.keys());\n  //console.log(\"First hit: \" + categoryTags[0]);\n\n  let sortedCategoryTags = categoryTags.sort(( a, b) => {\n    return categories.get(b) - categories.get(a);\n  });\n\n  //console.log(\"Top hit: \" + sortedCategoryTags[0] + \" \" + categories.get(sortedCategoryTags[0]));\n\n  data.Items.forEach( item => {\n    item.item.categoryWeight = 0;\n\n    item.item.data.categories.forEach( category => {\n      item.item.categoryWeight += categories.get(category);\n    })\n\n  });\n\n  let itemsSortedByWeight = Array.from(data.Items).sort( (a,b) => {\n    return a.item.categoryWeight - b.item.categoryWeight;\n  });\n\n  \n\n  let tenPercent = (data.Items.length * 0.1);\n  let twentyPercent = (data.Items.length * 0.2);\n  let thirtyPercent = (data.Items.length * 0.3);\n\n  //console.log(\"Category weights: \");\n\n  itemsSortedByWeight.forEach( (item, index ) => {\n\n    let perc = (index / data.Items.length) * 100;\n    item.item.weightCategory = \"weightCategoryPercentage-\" + String(perc).charAt(0);\n    console.log(item.item.data.title + \" \" + item.item.categoryWeight);\n  })\n\n  sortedCategoryTags.forEach( category => {\n    let categoryAssignment = {};\n    categoryAssignment.assignedNews = [];\n    categoryAssignment.weight = categories.get(category);\n    categoryAssignment.demand = 4;\n    categoryAssignment.category = category;\n    categoryAssignments.set(category, categoryAssignment);\n  });\n\n  //console.log(\"Assignments\")\n\n  itemsSortedByWeight.forEach( item => {\n\n    sortedCategoryTags.forEach( category => {\n\n      if (categories.get(category) > Math.min(data.Items.length / 15, 1)) {\n        if ((item.item.data.categories.includes(category)) && (item.item.data.assigned !==true)) {\n          \n          var categoryAssignment = categoryAssignments.get(category);\n          \n          if (categoryAssignment.assignedNews.length < categoryAssignment.demand) {\n\n            item.item.data.assigned = true;\n            if( item.item.data.categories[0].localeCompare(category) !== 0 ) {\n              item.item.displayCategory = item.item.data.categories[0];\n            } else {\n              item.item.displayCategory = item.item.data.categories[1];\n            }\n            categoryAssignment.assignedNews.push(item);\n  \n          }\n          \n        }\n    }\n\n    });\n\n  });\n\n  \n  itemsSortedByWeight.forEach( item => {\n\n    sortedCategoryTags.forEach( category => {\n      if (categories.get(category) > Math.max(data.Items.length / 25, 2)) {\n\n        if ((item.item.data.categories.includes(category)) && (item.item.data.assigned !==true)) {\n          \n          var categoryAssignment = categoryAssignments.get(category);\n          \n          if (categoryAssignment.assignedNews.length < categoryAssignment.demand) {\n\n            item.item.data.assigned = true;\n            categoryAssignment.assignedNews.push(item);\n  \n          }\n        }\n      }\n\n    });\n\n  });\n\n\n\n  /*itemsSortedByWeight.slice().reverse().forEach( item => {\n\n    sortedCategoryTags.slice().forEach( category => {\n\n        if ((item.item.data.categories.includes(category)) && (item.item.data.assigned !==true)) {\n          \n          var categoryAssignment = categoryAssignments.get(category);\n          \n          if (categoryAssignment.assignedNews.length < categoryAssignment.demand) {\n\n            item.item.data.assigned = true;\n            categoryAssignment.assignedNews.push(item);\n  \n          }\n        }\n\n    });\n\n  });*/\n\n  console.log(\"Items not assigned:\");\n  itemsSortedByWeight.forEach( item => {\n\n    if( item.item.data.assigned !== true ) {\n      console.log(item.item.data.title);\n      console.log(item.item.data.categories);\n    }\n\n  });\n\n  categoryAssignments.forEach( (value, key, map) => {\n    //console.log(key + \": \");\n    let totalCategoryWeight = 0;\n    value.assignedNews.forEach( item => {\n      item.item.sizeCategory = \"size-\" + value.assignedNews.length;\n      totalCategoryWeight += item.item.categoryWeight;\n      //console.log(item.item.data.title);\n    });\n    value.totalCategoryWeight = totalCategoryWeight;\n    value.assignedNews.forEach( item => {\n      if (value.minWeight === undefined || item.item.categoryWeight < value.minWeight) {\n        value.minWeight = item.item.categoryWeight;\n      }\n    });\n  });\n\n  let categoryValuesSorted = Array.from(categoryAssignments.values());\n  categoryValuesSorted = categoryValuesSorted.filter( a => a.assignedNews.length > 0);\n  categoryValuesSorted = categoryValuesSorted.sort( (a, b) => {\n    return a.minWeight - b.minWeight;\n  });\n  \n  categoryValuesSorted.forEach( (value, index) => {\n    let pers = (index / categoryValuesSorted.length) * 100;\n    value.minWeightPercentage = \"minWeightCategoryPercentage-\" + String(pers).charAt(0);\n  });\n\n\n\n  return {\"categories\": categories, \"sortedTags\": sortedCategoryTags, \"categoryAssignments\": categoryAssignments}\n}\n\nfunction App() {\n\n  const [data, setData] = useState({Items: []});\n  \n  useEffect(() => {  \n    const fetchNews = async() => {\n      fetch('https://xglupt6p4k.execute-api.us-east-1.amazonaws.com/dev/getNews')\n      .then(function(response) {\n        return response.json();\n      }).then(function(data) {\n        //console.log(data); \n        setData(data);\n      });\n    }\n    fetchNews();\n  }, []);\n\n  const sortCategories = getTopCategories(data);\n\n  const colors = new Map();\n\n  var counter = 0;\n  sortCategories.sortedTags.slice(4).forEach( category => {\n    colors.set(category, \"#355C7D\");\n  })\n\n  colors.set(sortCategories.sortedTags[0], \"#F8B195\");\n  colors.set(sortCategories.sortedTags[1], \"#F67280\");\n  colors.set(sortCategories.sortedTags[2], \"#C06C84\");\n  colors.set(sortCategories.sortedTags[3], \"#6C5B7B\");\n  colors.set(sortCategories.sortedTags[4], \"#355C7D\");\n\n  const categoryTags = new Map();\n  sortCategories.sortedTags.forEach( (item, index) => {\n    categoryTags.set(item, \"category-\" + index);\n  })\n\n  // style = {{backgroundColor: colors.get(category)}\n\n  return (\n    <div>\n      <Layout>\n        {data.Items.length !== 0 ?\n          <CategorizedLayout data={sortCategories} feedName=\"Kaikki\"/>\n          : <div style={{textAlign: 'center'}}><h1>Noudetaan uutisia...</h1></div>\n        }\n      </Layout>\n      \n    </div>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}